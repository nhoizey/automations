# Inspired by:
# https://michaelcurrin.github.io/code-cookbook/recipes/ci-cd/github-actions/workflows/node/upgrade-packages.html
name: Update dependencies

on:
  schedule:
    #   # https://crontab.guru/#0_8_*_*_1
    - cron: "0 8 * * 1"
  workflow_dispatch:
  workflow_call:

jobs:
  update-packages:
    name: Update npm packages

    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v3

      - name: ⚙️ Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: ⬇️ Install dependencies
        run: npm ci

      - name: 🔍 Check for outdated packages
        id: check
        run: |
          # set -x
          # set -e

          OUTDATED=$(npm outdated || true)

          if [[ -z "$OUTDATED" ]]; then
            echo 'Nothing to update' >> "${GITHUB_STEP_SUMMARY}"
            echo "updatable=false" >> "${GITHUB_OUTPUT}"
          else
            HEADER=$(echo "$OUTDATED" | grep "Package")
            COMPATIBLE=$(echo "$OUTDATED" | awk '$2!=$3' | grep -v "Package" || true)
            if [[ -z "$COMPATIBLE" ]]; then
              COMPATIBLE_COUNT=0
            else
              COMPATIBLE_COUNT=$(($(echo "$COMPATIBLE" | wc -l) + 0))
            fi
            NOT_COMPATIBLE=$(echo "$OUTDATED" | awk '$2==$3' || true)
            if [[ -z "$NOT_COMPATIBLE" ]]; then
              NOT_COMPATIBLE_COUNT=0
            else
              NOT_COMPATIBLE_COUNT=$(($(echo "$NOT_COMPATIBLE" | wc -l) + 0))
            fi

            if [[ $COMPATIBLE_COUNT -gt 0 ]]; then
              {
                echo "${COMPATIBLE_COUNT} package(s) will be updated:"
                echo '```'
                echo "${HEADER}"
                echo "${COMPATIBLE}"
                echo '```'
              } >> "${GITHUB_STEP_SUMMARY}"

              delimiter="$(openssl rand -hex 8)"
              echo "updates_list<<${delimiter}" >> "${GITHUB_OUTPUT}"
              echo "${COMPATIBLE_COUNT} package(s) will be updated:"
              echo '```'
              echo "${HEADER}"
              echo "${COMPATIBLE}"
              echo '```'
              echo "${delimiter}" >> "${GITHUB_OUTPUT}"

              echo "updatable=true" >> "${GITHUB_OUTPUT}"
            else
              echo 'Nothing to update' >> "${GITHUB_STEP_SUMMARY}"
              echo "updatable=false" >> "${GITHUB_OUTPUT}"
            fi

            if [[ $NOT_COMPATIBLE_COUNT -gt 0 ]]; then
              {
                echo ''
                echo "${NOT_COMPATIBLE_COUNT} not compatible update(s):"
                echo '```'
                echo "${HEADER}"
                echo "${NOT_COMPATIBLE}"
                echo '```'
              } >> "${GITHUB_STEP_SUMMARY}"
            fi
          fi

      - name: ⏫ Update packages
        id: update
        if: steps.check.outputs.updatable == 'true'
        run: |
          npm update --save

      - name: 🧐 Lint
        if: steps.check.outputs.updatable == 'true'
        run: npm run lint --if-present

      - name: 🚨 Test
        if: steps.check.outputs.updatable == 'true'
        run: npm run test --if-present

      - name: 🏗️ Build
        if: steps.check.outputs.updatable == 'true'
        run: npm run build --if-present

      - name: 🔀 Commit and create PR
        if: steps.check.outputs.updatable == 'true'
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.PAT }}
          title: "build(deps): update NPM packages"
          body: |
            # Updating dependencies

            ${{ steps.update.outputs.updates_list }}
          branch: "update-dependencies"
          delete-branch: true
          commit-message: "build(deps): update NPM packages"
          labels: |
            type: dependencies 🔗
            automerge 🤞
